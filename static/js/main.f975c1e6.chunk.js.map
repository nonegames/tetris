{"version":3,"sources":["game/shapes.ts","game/utils.ts","game/Game.ts","Popup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["shapes","T","S","Z","L","J","I","O","randomIndex","arrayLength","Math","floor","random","BOARD_W","BOARD_H","CEIL_SIZE","Game","ctx","score","shapeN","shapeD","shapePos","board","Array","fill","rafId","processTime","processWait","isFallingDown","isPlaying","onStart","undefined","onGameover","onScoreChange","array","shapeNames","Object","keys","name","length","this","x","y","direction","w","h","shape","slice","row","col","sx","sy","solid","cx","cy","cw","ch","borderSize","save","fillStyle","fillRect","restore","clearRect","combine","drawCeil","d","shapeX","shapeY","canMove","scoreRows","rowResult","push","call","reverse","forEach","scoreRowIndex","splice","concat","time","requestAnimationFrame","loop","process","testGameover","gameover","dealScore","pickShape","draw","cancelAnimationFrame","Popup","game","isGameover","className","id","onClick","start","App","canvasRef","useRef","useState","setIsGameover","running","setRunning","setScore","useEffect","current","getContext","onKeydown","e","preventDefault","keycode","moveX","moveDown","rotate","fallDown","document","addEventListener","removeEventListener","width","height","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f975c1e6.chunk.js","sourcesContent":["export const T = [\n  [\n    3, 2, // 2行3列\n\n    1,1,1,\n    0,1,0,\n  ],\n  [\n    2, 3,\n    \n    1, 0,\n    1, 1,\n    1, 0,\n  ],\n  [\n    3, 2, // 2行3列\n\n    0,1,0,\n    1,1,1,\n  ],\n  [\n    2, 3,\n\n    0, 1,\n    1, 1,\n    0, 1,\n  ],\n]\n\nexport const S = [\n  [\n    3, 2,\n\n    0,1,1,\n    1,1,0,\n  ],\n  [\n    2, 3,\n\n    1, 0,\n    1, 1,\n    0, 1,\n  ]\n]\n\nexport const Z = [\n  [\n    3, 2,\n\n    1,1,0,\n    0,1,1,\n  ],\n  [\n    2, 3,\n\n    0, 1,\n    1, 1,\n    1, 0,\n  ]\n]\n\nexport const L = [\n  [\n    2, 3,\n\n    1,0,\n    1,0,\n    1,1,\n  ],\n  [\n    3, 2,\n\n    0,0,1,\n    1,1,1,\n  ],\n  [\n    2, 3,\n    1,1,\n    0,1,\n    0,1,\n  ],\n  [\n    3, 2,\n\n    1,1,1,\n    1,0,0,\n  ],\n]\n\nexport const J = [\n  [\n    2, 3,\n\n    0,1,\n    0,1,\n    1,1,\n  ],\n  [\n    3, 2,\n\n    1,1,1,\n    0,0,1,\n  ],\n  [\n    2, 3,\n    1,1,\n    1,0,\n    1,0,\n  ],\n  [\n    3, 2,\n\n    1,0,0,\n    1,1,1,\n  ],\n]\n\nexport const I = [\n  [\n    1, 4,\n\n    1,\n    1,\n    1,\n    1,\n  ],\n  [\n    4, 1,\n\n    1,1,1,1,\n  ]\n]\n\nexport const O = [\n  [\n    2, 2,\n\n    1,1,\n    1,1,\n  ]\n]\n\nconst shapes = {\n  T,\n  S,\n  Z,\n  L,\n  J,\n  I,\n  O,\n}\n\nexport default shapes\n","export function randomIndex(arrayLength: number): number {\n  return Math.floor(Math.random() * arrayLength)\n}\n\n/**\n * 数组中随机选择一个元素\n * @param array \n */\nexport function randomItem<T=number>(array: Array<T>): T {\n  return array[randomIndex(array.length)]\n}","import shapes from './shapes'\nimport { randomIndex, randomItem } from './utils'\n\n/**\n * 游戏面板宽度，即水平方向方格数量\n */\nexport const BOARD_W = 10\n/**\n * 游戏面板高度，即垂直方向方格数量\n */\nexport const BOARD_H = 20\n/**\n * 一个小格子的尺寸\n */\nexport const CEIL_SIZE = 20\n\n/**\n * 形状名称\n */\ntype ShapeName = keyof typeof shapes\n\n/**\n * 游戏类\n */\nexport class Game {\n  /**\n   * canvas 的context对象\n   */\n  ctx?: CanvasRenderingContext2D | null = null\n  /**\n   * 得分\n   */\n  score = 0\n  /**\n   * 当前形状名称\n   */\n  shapeN: ShapeName = 'L'\n  /**\n   * 当前形状方向\n   */\n  shapeD: number = 1\n  /**\n   * 形状当前位置 [x, y]\n   */\n  shapePos: [x: number, y: number] = [3, 6]\n  /**\n   * 游戏板面\n   */\n  board: number[] = Array(BOARD_W * BOARD_H).fill(0)\n\n  /**\n   * requestAnimationFrame的id\n   */\n  rafId = 0\n\n  /**\n   * 上一次执行流程的时间\n   */\n  processTime: number | null = null\n\n  /**\n   * 执行流程需要等待的毫秒数\n   */\n  processWait: number = 1000\n\n  /**\n   * 正在\n   */\n  isFallingDown: boolean = false\n\n  /**\n   * 标记游戏是否正在进行\n   */\n  isPlaying: boolean = false\n\n  // 开始游戏时的回调函数\n  onStart?: () => void = undefined\n  // 游戏结束时的回调函数\n  onGameover?: () => void = undefined\n  // 分数改变时的回调\n  onScoreChange?: (score: number) => void = undefined\n\n  /**\n   * 随机选择一个形状\n   */\n  pickShape() {\n    const shapeNames = Object.keys(shapes) as Array<keyof typeof shapes>\n    // 随机挑选一个\n    const name = randomItem<keyof typeof shapes>(shapeNames)\n    this.shapeN = name\n    this.shapeD = randomIndex(shapes[name].length)\n\n    this.processTime = null\n    this.shapePos = [randomIndex(BOARD_W - shapes[name][this.shapeD][0]), 0]\n  }\n\n  /**\n   * 合并形状至画板\n   */\n  combine() {\n    // 当前形状坐标\n    const [x, y] = this.shapePos\n    // 当前形状名称与方向\n    const { shapeN: name, shapeD: direction } = this\n    // 当前形状的宽高与数据\n    const [w, h, ...shape] = shapes[name][direction]\n    // 当前画板数据\n    const board = this.board.slice()\n\n    // 遍历画板中与形状重合的坐标数据\n    for(let row = y; row < y + h; row += 1) {\n      for(let col = x; col < x + w; col += 1) {\n        // 形状格子坐标\n        const sx = col - x\n        const sy = row - y\n        // 计算该坐标下画板的值\n        board[row * BOARD_W + col] = board[row * BOARD_W + col] + shape[sy * w + sx] > 0 ? 1 : 0\n      }\n    }\n\n    return board\n  }\n\n  /**\n   * 绘制一个小格子\n   */\n  drawCeil(x: number, y: number, solid: boolean = false) {\n    const { ctx } = this\n    if (!ctx) return\n\n    /**\n     * 绘制目标的坐标与宽高，留出1像素的缝隙\n     */\n    const cx = x * CEIL_SIZE + 1\n    const cy = y * CEIL_SIZE + 1\n    const cw = CEIL_SIZE - 1\n    const ch = CEIL_SIZE - 1\n\n    const borderSize = 2\n\n    ctx.save()\n    if (solid) {\n      ctx.fillStyle = '#444'\n      ctx.fillRect(cx, cy, cw, ch)\n\n      ctx.fillStyle = '#666'\n      ctx.fillRect(cx + borderSize, cy + borderSize, cw - 2 * borderSize, ch - 2 * borderSize)\n\n      ctx.fillStyle = '#444'\n      ctx.fillRect(cx + 2 * borderSize, cy +  2 * borderSize, cw - 4 * borderSize, ch - 4 * borderSize)\n\n    } else {\n      ctx.fillStyle = '#bbb'\n      ctx.fillRect(cx, cy, cw, ch)\n    }\n    ctx.restore()\n  }\n\n  /**\n   * 绘制画板\n   */\n  draw() {\n    const { ctx } = this\n    if (!ctx) return\n    // 先清空canvas\n    ctx.clearRect(0, 0, BOARD_W * CEIL_SIZE, BOARD_H * CEIL_SIZE)\n    // 计算需要绘制的面板数据\n    const board = this.combine()\n    // 逐格绘制\n    for(let y = 0; y < BOARD_H; y += 1) {\n      for(let x = 0; x < BOARD_W; x += 1) {\n        const solid = board[y * BOARD_W + x] === 1\n        this.drawCeil(x, y, solid)\n      }\n    }\n  }\n\n  /**\n   * 旋转形状，即使用该形状的下一个方向数据\n   */\n  rotate() {\n    const shape = shapes[this.shapeN]\n    this.shapeD = (this.shapeD + 1) % shape.length\n    const [w, h] = shapes[this.shapeN][this.shapeD]\n    const [x, y] = this.shapePos\n    // 避免右侧超出\n    if (x > BOARD_W - w) {\n      this.shapePos[0] = BOARD_W - w\n    }\n    // 避免底部超出\n    if (y > BOARD_H - h) {\n      this.shapePos[1] = BOARD_H - h\n    }\n  }\n\n  /**\n   * 判断是否能向某个方向移动\n   * @param d 移动方向\n   */\n  canMove(d: 'l' | 'r' | 'd') {\n    // 当前形状的坐标\n    const [shapeX, shapeY] = this.shapePos\n    // 当前形状数据\n    const [w, h, ...shape] = shapes[this.shapeN][this.shapeD]\n    const { board } = this\n    // 目标坐标\n    let x, y\n\n    // 水平方向的移动\n    if (d === 'l') {\n      // 向左移动\n      x = shapeX - 1\n    } else if (d === 'r') {\n      // 向右移动\n      x = shapeX + 1\n    } else {\n      x = shapeX\n    }\n\n    // 向下移动\n    if (d === 'd') {\n      y = shapeY + 1\n    } else {\n      y = shapeY\n    }\n\n    // 超出边界\n    if (x < 0 || x > BOARD_W - w || y > BOARD_H - h) {\n      return false\n    }\n\n    // 检测是否有碰撞\n    for(let row = y; row < y + h; row += 1) {\n      for(let col = x; col < x + w; col += 1) {\n        // 形状格子坐标\n        const sx = col - x\n        const sy = row - y\n        if (board[row * BOARD_W + col] * shape[sy * w + sx] !== 0) {\n          // 存在碰撞，返回false\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * 水平移到\n   * @param d 移动方向\n   */\n  moveX(d: 'l' | 'r') {\n    if (this.canMove(d)) {\n      if (d === 'l') {\n        this.shapePos[0] -= 1\n      } else if (d === 'r') {\n        this.shapePos[0] += 1\n      }\n    }\n  }\n  /**\n   * 向下移动\n   */\n  moveDown() {\n    if (this.canMove('d')) {\n      this.shapePos[1] += 1\n    }\n  }\n\n  /**\n   * 开始直接到底，即快速下落\n   */\n  fallDown() {\n    this.isFallingDown = true\n  }\n\n  /**\n   * 检测游戏是否结束\n   * 当形状刚生成还未下落，且与当前面板中的方格发生碰撞，则表示游戏结束\n   */\n  testGameover() {\n    const [x, y] = this.shapePos\n    if (y > 0) return false\n\n    const [w, h, ...shape] = shapes[this.shapeN][this.shapeD]\n    \n    // 检测是否有碰撞\n    for(let row = y; row < y + h; row += 1) {\n      for(let col = x; col < x + w; col += 1) {\n        // 形状格子坐标\n        const sx = col - x\n        const sy = row - y\n        if (this.board[row * BOARD_W + col] * shape[sy * w + sx] !== 0) {\n          // 存在碰撞，游戏结束\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * 处理计分与整理面板\n   */\n  dealScore() {\n    const scoreRows: number[] = []\n    for(let row = 0; row < BOARD_H; row += 1) {\n      let rowResult = 1\n      for(let col = 0; col < BOARD_W; col += 1) {\n        rowResult *= this.board[row * BOARD_W + col]\n      }\n      if (rowResult > 0) {\n        scoreRows.push(row)\n      }\n    }\n\n    if (scoreRows.length > 0) {\n      // 每行10分\n      this.score += scoreRows.length * 10\n      // 通知UI更新得分\n      if (this.onScoreChange) {\n        this.onScoreChange.call(undefined, this.score)\n      }\n      // 消除满行\n      scoreRows.reverse().forEach((scoreRowIndex) => {\n        this.board.splice(scoreRowIndex * BOARD_W, BOARD_W)\n      })\n      // 补充新行\n      this.board = Array<number>(scoreRows.length * BOARD_W).fill(0).concat(this.board)\n    }\n  }\n\n  /**\n   * 游戏循环\n   * @param time 当前帧时间\n   */\n  loop(time: number) {\n    this.rafId = requestAnimationFrame((time) => this.loop(time))\n    this.process(time)\n  }\n\n  /**\n   * 每一帧的处理流程\n   * @param time 当前帧时间\n   */\n  process(time: number) {\n    // 若游戏已经结束则直接退出\n    if (this.testGameover()) {\n      this.gameover()\n      return\n    }\n\n    if (this.processTime === null) {\n      this.processTime = time\n    } else if (this.isFallingDown || time - this.processTime >= this.processWait) {\n      this.processTime = time\n\n      if (this.canMove('d')) {\n        // 能够下落一格\n        this.shapePos[1] += 1\n      } else {\n        // 已经无法下降，处理相关逻辑\n        this.board = this.combine()\n        this.dealScore()\n        this.pickShape()\n        \n        // 解除快速下落模式\n        if (this.isFallingDown) {\n          this.isFallingDown = false\n        }\n      }\n    }\n\n    // 重新绘制\n    this.draw()\n  }\n  /**\n   * 开始游戏\n   */\n  start() {\n    this.isPlaying = true\n    this.board.fill(0)\n    this.score = 0\n    this.isFallingDown = false\n    this.pickShape()\n    this.rafId = requestAnimationFrame((time) => this.loop(time))\n\n    if (this.onStart) {\n      this.onStart.call(undefined)\n    }\n  }\n  /**\n   * 游戏结束\n   */\n  gameover() {\n    this.isPlaying = false\n    cancelAnimationFrame(this.rafId)\n\n    if (this.onGameover) {\n      this.onGameover.call(undefined)\n    }\n  }\n}","import React from 'react'\nimport { Game } from './game'\n\ninterface PopupProps {\n  /**\n   * 游戏类实例\n   */\n  game: Game\n  /**\n   * 是否是游戏结束\n   */\n  isGameover: boolean\n}\n\nconst Popup: React.FC<PopupProps> = ({ game, isGameover }) => {\n  return (\n    <div className='popup-box'>\n      {!isGameover ? null : (\n        <div className='gameover-msg'>GAME OVER</div>\n      )}\n      <button\n        id='btnStart'\n        onClick={() => {\n          game.start()\n        }}\n      >\n        {isGameover ? 'TRY AGAIN' : 'START GAME'}\n      </button>\n    </div>\n  )\n}\n\nexport default Popup\n","import React, { useEffect, useRef, useState } from 'react'\nimport './icon.css'\nimport './App.css'\nimport { Game } from './game'\nimport Popup from './Popup'\nimport keycode from 'keycode'\n\n// Game实例\nconst game = new Game()\n\nfunction App() {\n  // canvas元素的引用\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  const [isGameover, setIsGameover] = useState(false)\n  const [running, setRunning] = useState(false)\n  const [score, setScore] = useState(0)\n\n  // 绑定canvas元素的\"ctx\"到game\n  useEffect(() => {\n    game.ctx = canvasRef.current?.getContext('2d')\n    game.onStart = () => {\n      setRunning(true)\n    }\n    game.onGameover = () => {\n      setRunning(false)\n      setIsGameover(true)\n    }\n    game.onScoreChange = setScore\n\n    // 绘制面板\n    game.draw()\n  }, [])\n\n  // 监听键盘事件\n  useEffect(() => {\n    const onKeydown = (e: KeyboardEvent) => {\n      e.preventDefault()\n      \n      switch(keycode(e)) {\n        case 'left':\n        case 'a':\n          game.moveX('l')\n          break\n        case 'right':\n        case 'd':\n          game.moveX('r')\n          break\n        case 'down':\n        case 's':\n          game.moveDown()\n          break\n        case 'up':\n        case 'w':\n        case 'r':\n          game.rotate()\n          break\n        case 'enter':\n        case 'space':\n          if (game.isPlaying) {\n            game.fallDown()\n          } else {\n            game.start()\n          }\n      }\n    }\n\n    document.addEventListener('keydown', onKeydown)\n\n    return () => document.removeEventListener('keydown', onKeydown)\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <span className=\"score-label\">SCORE: </span>\n        <span className=\"score-value\">{score}</span>\n      </header>\n      <section>\n        <canvas\n          id=\"game-renderer\"\n          width={201}\n          height={401}\n          ref={canvasRef}\n        ></canvas>\n        {running ? null : (\n          <Popup game={game} isGameover={isGameover} />\n        )}\n      </section>\n      <footer>\n        <button className='iconfont icon-arrow-left' onClick={() => game.moveX('l')}></button>\n        <button className='iconfont icon-arrow-down' onClick={() => game.moveDown()}></button>\n        <button className='iconfont icon-arrow-right' onClick={() => game.moveX('r')}></button>\n        <span>&nbsp;&nbsp;</span>\n        <button className='iconfont icon-arrow-bottom' onClick={() => game.fallDown()}></button>\n        <button className='iconfont icon-arrow-rotate' onClick={() => game.rotate()}></button>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}